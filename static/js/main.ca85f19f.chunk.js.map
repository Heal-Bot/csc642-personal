{"version":3,"sources":["Components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["schema","yup","shape","firstName","required","min","max","lastName","perferredTitle","heightFeet","heightInches","phoneNumber","matches","address","address2","city","state","zip","monthlyBudget","email","Terms","oneOf","SurveyForm","useState","formData","setFormData","mapData","setMapData","renderData","setRenderData","disableSubmit","middlepage","useRef","captchaRef","useEffect","script","document","createElement","src","async","defer","body","appendChild","console","log","JSON","stringify","axios","get","params","key","then","res","data","results","geometry","location","current","scrollIntoView","behavior","scrollToProp","validationSchema","validator","onSubmit","values","setSubmitting","resetForm","execute","initialValues","recaptcha","EmailCheckBox","PhoneCheckBox","FacebookCheckBox","TweeterCheckBox","handleSubmit","handleChange","handleBlur","touched","errors","isValid","isSubmitting","Form","className","noValidate","Row","Group","as","Col","Label","Control","type","placeholder","name","value","onChange","onBlur","Feedback","Select","Text","map","Check","id","label","href","ref","sitekey","size","style","display","margin","Button","class","disabled","readOnly","length","googleMapsApiKey","mapContainerStyle","width","height","center","zoom","position","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ca85f19f.chunk.js","sourcesContent":["import Form from 'react-bootstrap/Form'\r\nimport { Button, Row, Col} from 'react-bootstrap'\r\nimport { Formik } from 'formik';\r\nimport React, {useRef, useState, useEffect } from \"react\";\r\nimport * as yup from 'yup';\r\nimport Recaptcha from \"react-recaptcha\";\r\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\r\nimport axios from 'axios'\r\n\r\nconst schema = yup.object().shape({\r\n    firstName: yup.string().required('*First name is a required field')\r\n    .min(2,'*Must be longer then 2 characters').max(40, '*Must be less then 40 characters long'),\r\n    lastName: yup.string().required('*Last name is a required field').min(2,'Must be longer then 2 characters').max(40, '*Must be less then 40 characters long'),\r\n    perferredTitle: yup.string().required('*Your perferred title is a required field'),\r\n\r\n    heightFeet:yup.string(), \r\n    heightInches:yup.string(),\r\n\r\n    phoneNumber: yup.string().matches(/^(\\+?\\d{0,1})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)$/, 'Must be a valid phone number'),\r\n\r\n    address: yup.string().required('*Your address is a required field'),\r\n    address2: yup.string(),\r\n    city: yup.string().required('*Your city is a required field'),\r\n    state: yup.string().required(`*Your state is a required field`),\r\n    zip: yup.string().required(`*Your zip code is a required field`).matches(/^[0-9]{5}(-?[0-9]{4})?$/, '*Must be 5 or 9 digits'),\r\n\r\n    monthlyBudget: yup.string().required(`*Your monthly budget is a required field`),\r\n    email: yup.string().email('*Invalid email address').required(`*Your email address is a required field`),\r\n\r\n    Terms: yup.bool().required().oneOf([true], '*Terms must be accepted'),\r\n  });\r\n\r\nfunction SurveyForm() {\r\n\r\n    const [formData, setFormData] = useState({});\r\n    const [mapData, setMapData] = useState({});\r\n    const [renderData, setRenderData] = useState(false);\r\n    const [disableSubmit,setDisableSubmit] = useState(false);\r\n    const middlepage =  useRef(null);\r\n\r\n    const captchaRef = useRef();\r\n\r\n    const scrollToProp = () => {\r\n      middlepage.current?.scrollIntoView({ behavior: \"smooth\" })\r\n    }\r\n\r\n  const budgetMap = { \r\n    1 : 'Less than $50',\r\n    2 : 'Between $50 and $100',\r\n    3 : 'Above $100',\r\n  }\r\n  const containerStyle = {\r\n    width: '400px',\r\n    height: '400px'\r\n  };\r\n  \r\n  const center = {\r\n    lat: -3.745,\r\n    lng: -38.523\r\n  };\r\n  const onCaptchaChange = (value) => {\r\n    console.log('Captcha value:', value);\r\n\r\n  }\r\n\r\n    useEffect(()=>{\r\n      const script = document.createElement(\"script\");\r\n      script.src =\r\n        \"https://www.google.com/recaptcha/api.js\";\r\n      script.async = true;\r\n      script.defer = true;\r\n      document.body.appendChild(script);\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n      console.log(formData)\r\n      if(JSON.stringify(formData) !== JSON.stringify({})){\r\n      //https://maps.googleapis.com/maps/api/geocode/json?address=1600+Amphitheatre+Parkway,+Mountain+View,+CA&key=YOUR_API_KEY\r\n      axios.get('https://maps.googleapis.com/maps/api/geocode/json', {params: {\r\n        address: `${formData.address} ${formData.address2}. ${formData.city}, ${formData.state}, ${formData.zip}`,\r\n        key: 'AIzaSyA9pciXesTSavl3XWhwkhVsizl9es5m8yI'\r\n      }})\r\n        \r\n        .then(res => {setMapData(res.data.results[0].geometry.location)})\r\n        .then(res => {\r\n          setRenderData(true)\r\n          //setDisableSubmit(true);\r\n          scrollToProp()\r\n        }\r\n        )\r\n      }\r\n    },[formData])\r\n\r\n    return (\r\n<div>\r\n    <Formik\r\n      validationSchema={schema}\r\n      validator={() => ({})}\r\n      onSubmit={ (values, {setSubmitting, resetForm}) => {\r\n        setSubmitting(true);\r\n        captchaRef.current.execute();\r\n        setFormData(values)\r\n        setSubmitting(false);\r\n    }}\r\n\r\n      initialValues={{\r\n        firstName: '',\r\n        lastName: '',\r\n        phoneNumber: '',\r\n        address: '',\r\n        address2: '',\r\n        heightFeet: '',\r\n        heightInches: '',\r\n        city: '',\r\n        state: '',\r\n        zip: '',\r\n        monthlyBudget: '',\r\n        email: '',\r\n        Terms: false,\r\n        perferredTitle: '',\r\n        recaptcha: '',\r\n        EmailCheckBox: '',\r\n         PhoneCheckBox: '',\r\n          FacebookCheckBox: '',\r\n           TweeterCheckBox: '',\r\n          'Surface MailCheckBox': '',\r\n            'Personal VisitCheckBox': '',\r\n      }}\r\n    >\r\n      {({\r\n        handleSubmit,\r\n        handleChange,\r\n        handleBlur,\r\n        values,\r\n        touched,\r\n        isValid,\r\n        errors,\r\n        isSubmitting,\r\n      }) => (\r\n\r\n    <Form className=\"survey-form\" noValidate onSubmit={handleSubmit}>\r\n        <h3 className=\"title\">CSC 642 848 Fall 2021 Individual Assignment Austin Powers</h3>\r\n        <h4 className=\"title2\">Data survey form</h4>\r\n\r\n\r\n        {/* First and Last Name */}\r\n\r\n    <Row className=\"nameField\">\r\n        <Form.Group as = {Col} className=\"mb-3\">\r\n        <Form.Label>Last Name*</Form.Label>\r\n        <Form.Control type=\"text\"\r\n                placeholder='Last name'\r\n                name='lastName'\r\n                value={values.lastName}\r\n                onChange={handleChange}\r\n                onBlur = {handleBlur}\r\n                isValid={touched.lastName && !errors.lastName}\r\n                className= {errors.lastName ? 'errorBox' : null}\r\n                required/>\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                 <Form.Control.Feedback className = 'error' type=\"invalid-feedback\">\r\n                {touched.lastName && errors.lastName}\r\n              </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group as = {Col} className=\"mb-3\">\r\n        <Form.Label>First Name*</Form.Label>\r\n        <Form.Control type=\"text\" \r\n                placeholder='First name' \r\n                name = 'firstName'\r\n                value={values.firstName}\r\n                onChange={handleChange}\r\n                onBlur = {handleBlur}\r\n                isValid={touched.firstName && !errors.firstName}\r\n                 required/>\r\n                 <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                 <Form.Control.Feedback className = 'error' type=\"invalid-feedback\">\r\n                {touched.firstName && errors.firstName}\r\n              </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n\r\n    </Row>\r\n\r\n    {/* Perferred Title */}\r\n\r\n    <Row className=\"perferredTitleField\">\r\n        <Form.Group className=\"mb-3\" >\r\n        <Form.Label>Choose perferred title*</Form.Label>\r\n        <Form.Select \r\n                name='perferredTitle'\r\n                value={values.perferredTitle}\r\n                onChange={handleChange}\r\n                onBlur = {handleBlur}\r\n                isValid={touched.perferredTitle && !errors.perferredTitle} \r\n            >\r\n            <option value=\"\">Choose...</option>\r\n            <option value=\"None\">None</option>\r\n            <option value=\"Student\">Student</option>\r\n            <option value=\"Professor\">Professor</option>\r\n            <option value=\"Staff\">Staff</option>\r\n            <option value=\"Retired\">Retired</option>\r\n        </Form.Select >\r\n        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                 <Form.Control.Feedback className = 'error' type=\"invalid-feedback\">\r\n                {touched.perferredTitle && errors.perferredTitle}\r\n              </Form.Control.Feedback>\r\n        </Form.Group>\r\n    </Row>\r\n\r\n{/* Height */}\r\n    <Row className=\"heightField\">\r\n        <Form.Label>Your Height</Form.Label>\r\n\r\n        <Form.Group as = {Col} className=\"\" >\r\n            <Form.Select                 \r\n                name='heightFeet'\r\n                value={values.heightFeet}\r\n                onChange={handleChange}\r\n                onBlur = {handleBlur}\r\n                isValid={touched.heightFeet && !errors.heightFeet} >\r\n            <option value=\"\">---------</option>\r\n            <option value=\"2\">2 ft</option>\r\n            <option value=\"3\">3 ft</option>\r\n            <option value=\"4\">4 ft</option>\r\n            <option value=\"5\">5 ft</option>\r\n            <option value=\"6\">6 ft</option>\r\n            <option value=\"7\">7 ft</option>\r\n            <option value=\"8\">8 ft</option>\r\n            </Form.Select>\r\n        </Form.Group>\r\n\r\n        <Form.Group as = {Col} className=\"\" >\r\n        <Form.Select \r\n                        name='heightInches'\r\n                        value={values.heightInches}\r\n                        onChange={handleChange}\r\n                        onBlur = {handleBlur}\r\n                        isValid={touched.heightInches && !errors.heightInches} >\r\n            <option value=\"\">---------</option>\r\n            <option value=\"0\">0 inches</option>\r\n            <option value=\"1\">1 inches</option>\r\n            <option value=\"2\">2 inches</option>\r\n            <option value=\"3\">3 inches</option>\r\n            <option value=\"4\">4 inches</option>\r\n            <option value=\"5\">5 inches</option>\r\n            <option value=\"6\">6 inches</option>\r\n            <option value=\"7\">7 inches</option>\r\n            <option value=\"8\">8 inches</option>\r\n            <option value=\"9\">9 inches</option>\r\n            <option value=\"10\">10 inches</option>\r\n            <option value=\"11\">11 inches</option>\r\n            <option value=\"12\">12 inches</option>\r\n        </Form.Select>\r\n        \r\n        </Form.Group>\r\n        <Form.Text className=\"text-muted mb-3\">\r\n            In feet-inch measurements\r\n            </Form.Text>\r\n\r\n    </Row>\r\n\r\n{/* Phone */}\r\n    <Row className=\"phoneField\">\r\n        <Form.Group className=\"mb-3\" >\r\n        <Form.Label>Phone Number</Form.Label>\r\n        <Form.Control type=\"text\" \r\n         placeholder=\"Enter your Phone Number\"\r\n         name=\"phoneNumber\"\r\n         value={values.phoneNumber}\r\n         onChange={handleChange}\r\n         onBlur = {handleBlur}\r\n         isValid={touched.phoneNumber && !errors.phoneNumber}\r\n          />\r\n          <Form.Text className=\"text-muted\">\r\n          +x (xxx) xxx-xxxx Parentheses, dashes, and international code optional\r\n          </Form.Text>\r\n\r\n        <Form.Control.Feedback className = 'error' type=\"invalid-feedback\">\r\n                {touched.phoneNumber && errors.phoneNumber}\r\n              </Form.Control.Feedback>\r\n        </Form.Group>\r\n    </Row>\r\n{/* Address */}\r\n    <Form.Group className=\"mb-3\" >\r\n        <Form.Label>Address*</Form.Label>\r\n        <Form.Control placeholder=\"1234 Main St\"\r\n        name=\"address\"\r\n         value={values.address}\r\n         onChange={handleChange}\r\n         onBlur = {handleBlur}\r\n         isValid={touched.address && !errors.address}\r\n          />\r\n        <Form.Control.Feedback className = 'error' type=\"invalid-feedback\">\r\n                {touched.address && errors.address}\r\n              </Form.Control.Feedback>\r\n    </Form.Group>\r\n\r\n    <Form.Group className=\"mb-3\" >\r\n        <Form.Label>Address 2</Form.Label>\r\n        <Form.Control placeholder=\"Apartment, studio, or floor\"         \r\n         name=\"address2\"\r\n         value={values.address2}\r\n         onChange={handleChange}\r\n         onBlur = {handleBlur}\r\n         isValid={touched.address2 && !errors.address2}/>\r\n    </Form.Group>\r\n\r\n    <Row className=\"mb-3\">\r\n        <Form.Group as={Col} >\r\n        <Form.Label>City*</Form.Label>\r\n        <Form.Control className = 'addressBox'\r\n        name=\"city\"\r\n         value={values.city}\r\n         onChange={handleChange}\r\n         onBlur = {handleBlur}\r\n         isValid={touched.city && !errors.city}\r\n          />\r\n        <Form.Control.Feedback className = 'error' type=\"invalid-feedback\">\r\n                {touched.city && errors.city}\r\n              </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} >\r\n        <Form.Label>State*</Form.Label>\r\n        <Form.Select \r\n        className = 'addressBox'\r\n                        name='state'\r\n                        value={values.state}\r\n                        onChange={handleChange} \r\n                        onBlur = {handleBlur}\r\n                        isValid={touched.state && !errors.state}\r\n                         required\r\n                         >\r\n            <option>Choose...</option>\r\n            <option value=\"AL\">Alabama</option>\r\n\t<option value=\"AK\">Alaska</option>\r\n\t<option value=\"AZ\">Arizona</option>\r\n\t<option value=\"AR\">Arkansas</option>\r\n\t<option value=\"CA\">California</option>\r\n\t<option value=\"CO\">Colorado</option>\r\n\t<option value=\"CT\">Connecticut</option>\r\n\t<option value=\"DE\">Delaware</option>\r\n\t<option value=\"DC\">District Of Columbia</option>\r\n\t<option value=\"FL\">Florida</option>\r\n\t<option value=\"GA\">Georgia</option>\r\n\t<option value=\"HI\">Hawaii</option>\r\n\t<option value=\"ID\">Idaho</option>\r\n\t<option value=\"IL\">Illinois</option>\r\n\t<option value=\"IN\">Indiana</option>\r\n\t<option value=\"IA\">Iowa</option>\r\n\t<option value=\"KS\">Kansas</option>\r\n\t<option value=\"KY\">Kentucky</option>\r\n\t<option value=\"LA\">Louisiana</option>\r\n\t<option value=\"ME\">Maine</option>\r\n\t<option value=\"MD\">Maryland</option>\r\n\t<option value=\"MA\">Massachusetts</option>\r\n\t<option value=\"MI\">Michigan</option>\r\n\t<option value=\"MN\">Minnesota</option>\r\n\t<option value=\"MS\">Mississippi</option>\r\n\t<option value=\"MO\">Missouri</option>\r\n\t<option value=\"MT\">Montana</option>\r\n\t<option value=\"NE\">Nebraska</option>\r\n\t<option value=\"NV\">Nevada</option>\r\n\t<option value=\"NH\">New Hampshire</option>\r\n\t<option value=\"NJ\">New Jersey</option>\r\n\t<option value=\"NM\">New Mexico</option>\r\n\t<option value=\"NY\">New York</option>\r\n\t<option value=\"NC\">North Carolina</option>\r\n\t<option value=\"ND\">North Dakota</option>\r\n\t<option value=\"OH\">Ohio</option>\r\n\t<option value=\"OK\">Oklahoma</option>\r\n\t<option value=\"OR\">Oregon</option>\r\n\t<option value=\"PA\">Pennsylvania</option>\r\n\t<option value=\"RI\">Rhode Island</option>\r\n\t<option value=\"SC\">South Carolina</option>\r\n\t<option value=\"SD\">South Dakota</option>\r\n\t<option value=\"TN\">Tennessee</option>\r\n\t<option value=\"TX\">Texas</option>\r\n\t<option value=\"UT\">Utah</option>\r\n\t<option value=\"VT\">Vermont</option>\r\n\t<option value=\"VA\">Virginia</option>\r\n\t<option value=\"WA\">Washington</option>\r\n\t<option value=\"WV\">West Virginia</option>\r\n\t<option value=\"WI\">Wisconsin</option>\r\n\t<option value=\"WY\">Wyoming</option>\r\n        </Form.Select>\r\n        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                 <Form.Control.Feedback className = 'error' type=\"invalid-feedback\">\r\n                {touched.state && errors.state}\r\n              </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} >\r\n        <Form.Label>Zip*</Form.Label>\r\n        <Form.Control type=\"text\"\r\n        className = 'addressBox'\r\n                name='zip'\r\n                value={values.zip}\r\n                onChange={handleChange}\r\n                onBlur = {handleBlur}\r\n                isValid={touched.zip && !errors.zip}\r\n                 required/>\r\n                         {!(touched.zip && errors.zip) && !(touched.zip && !errors.zip) && <Form.Text className=\"text-muted\">\r\n                          xxxxx or xxxxx-xxxx\r\n                        </Form.Text>}\r\n                 <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                 <Form.Control.Feedback className = 'error' type=\"invalid-feedback\">\r\n                {touched.zip && errors.zip}\r\n              </Form.Control.Feedback>\r\n        </Form.Group>\r\n    </Row>\r\n\r\n{/* CheckBoxes */}\r\n    <Row className=\"CheckboxGroupField\">\r\n        <Form.Group className=\"mb-3\" >\r\n            <Form.Label>Check all services you require</Form.Label>\r\n            \r\n                {['Email', 'Phone', 'Facebook', 'Tweeter', 'Surface Mail','Personal Visit'].map((type) => (\r\n                <div key={`${type}`} >\r\n                    <Form.Check \r\n                    name = {`${type}CheckBox`}\r\n                    value = {values[`${type}CheckBox`]}\r\n                    onChange={handleChange}\r\n                    type={'checkbox'}\r\n                    className = 'checkbox'\r\n                    id={`${type}CheckBox`}\r\n                    label={`${type}`}\r\n                    required\r\n                    />\r\n                </div >\r\n                ))}\r\n        </Form.Group>\r\n    </Row>\r\n\r\n{/* Budget */}\r\n    <Row className=\"budgetField\">\r\n        <Form.Group className=\"mb-3\"  >\r\n        <Form.Label>Your monthly service budget for services*</Form.Label>\r\n        <Form.Select\r\n                        name='monthlyBudget'\r\n                        value={values.monthlyBudget}\r\n                        onChange={handleChange}\r\n                        isValid={touched.monthlyBudget && !errors.monthlyBudget}\r\n        >\r\n            <option value=\"\">-- None Selected --</option>\r\n            <option value=\"1\">Less than $50</option>\r\n            <option value=\"2\">Between $50 and $100</option>\r\n            <option value=\"3\">Above $100</option>\r\n        </Form.Select>\r\n        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                 <Form.Control.Feedback className = 'error' type=\"invalid-feedback\">\r\n                {touched.monthlyBudget && errors.monthlyBudget}\r\n              </Form.Control.Feedback>\r\n        </Form.Group>\r\n    </Row>\r\n\r\n{/* Email */}\r\n    <Row className=\"emailField\">\r\n        <Form.Group className=\"mb-3\" >\r\n        <Form.Label>Your Email*</Form.Label>\r\n        <Form.Control type=\"email\" placeholder=\"Enter your email\" \r\n                   name=\"email\"\r\n                    value={values.email}\r\n                    onChange={handleChange}\r\n                    isValid={touched.email && !errors.email}\r\n          />\r\n        {!(touched.email && errors.email) && <Form.Text className=\"text-muted\">\r\n            We'll never share your email with anyone else.\r\n            </Form.Text>}\r\n        <Form.Control.Feedback className = 'error' type=\"invalid-feedback\">\r\n                {touched.email && errors.email}\r\n              </Form.Control.Feedback>\r\n\r\n        </Form.Group>\r\n    </Row>\r\n\r\n\r\n    {/* Terms */}\r\n    <Row className=\"termsField\">\r\n        <Form.Group className=\"mb-3\" >\r\n        <Form.Check  id={`Terms`}  label={<div>I Agree to the <a href=\"/Terms\">Terms</a></div>}\r\n                name=\"Terms\"\r\n                value={values.Terms}\r\n                onChange={handleChange}\r\n                isValid={touched.Terms && !errors.Terms}\r\n            />\r\n                    <Form.Control.Feedback className = 'error' type=\"invalid-feedback\">\r\n                {touched.Terms && errors.Terms}\r\n              </Form.Control.Feedback>\r\n        </Form.Group>\r\n    </Row>\r\n\r\n    {/* <Recaptcha\r\n                  sitekey=\"6Ld6JwQdAAAAANj1Nubb280pL8fq_3hyGsltyUUb\"\r\n                  ref={captchaRef}\r\n                  onChange={onCaptchaChange}\r\n                  //isValid={touched.recaptcha && !errors.recaptcha}\r\n                  render=\"invisible\"\r\n                /> */}\r\n      <Recaptcha\r\n        ref={captchaRef}\r\n        sitekey=\"6LcfLwQdAAAAAK56cTz0rQ1bQkKRJjfd-X3GMWhr\"\r\n        onChange={(value) => {\r\n          console.log(value)\r\n        }}\r\n        size=\"invisible\"\r\n      />\r\n      <div style={{ display: \"flex\", margin: '50px 0 0 0'}}>\r\n        {<Button class=\"g-recaptcha\" data-sitekey=\"your_site_key\" data-callback='onSubmit' className=\"submitButton\" type=\"submit\" disabled={isSubmitting || disableSubmit}>Submit form</Button>} \r\n        </div>\r\n    </Form>\r\n    )}\r\n    </Formik>\r\n    {renderData &&\r\n            <div className = 'review-form'>\r\n                <h3 className = 'title2'>Results verification page Austin Powers</h3>\r\n                <div className = \"singleNameField\"> LastName: <Form.Control className = \"mb-3\" type=\"text\" value={formData.lastName} readOnly /></div>\r\n                      \r\n                      <div className = \"singleNameField\"> First Name<Form.Control  className = \"mb-3\" type=\"text\" value={formData.firstName} readOnly /></div>\r\n\r\n                      <div className = \"perferredTitleField\"> Perferred Title: <Form.Control className = \"mb-3\" type=\"text\" value={formData.perferredTitle} readOnly /></div>\r\n\r\n                      \r\n                      <div className = \"heightField\"> Your Height: <Form.Control className = \"mb-3\" type=\"text\" value={formData.heightFeet == \"\" && formData.heightInches == \"\" ? 'N/A' : `${formData.heightFeet}'${formData.heightInches}''`} readOnly /></div>\r\n\r\n                       \r\n                      <div  className = \"budgetField\"> Phone Number: <Form.Control className = \"mb-3\" type=\"text\" value={(formData.phoneNumber.length > 0 ? formData.phoneNumber : 'N/A')} readOnly /></div>\r\n\r\n                       \r\n                      <div className = \"singleNameField\"> Address: <Form.Control className = \"mb-3\" type=\"text\" value={`${formData.address}${formData.address2.length > 0 ? \" \" : \"\"}${formData.address2}. ${formData.city}, ${formData.state}, ${formData.zip}`} readOnly /></div>\r\n                      <div  className = \"mb-3\">\r\n                      <LoadScript\r\n        googleMapsApiKey=\"AIzaSyA9pciXesTSavl3XWhwkhVsizl9es5m8yI\"\r\n      >\r\n        <GoogleMap \r\n          mapContainerStyle={containerStyle}\r\n          center={mapData}\r\n          zoom={10}\r\n        >\r\n\r\n          <Marker key=\"marker\"\r\n\r\nposition={mapData}\r\n\r\n/>\r\n        </GoogleMap>\r\n      </LoadScript>\r\n      </div>\r\n\r\n            <div className = \"mb-3\"> Services you Require: <Form.Control className = \"selections\" type=\"text\" value={\r\n              `${formData.EmailCheckBox ? \"Email, \" : ''}${formData.PhoneCheckBox ? \"Phone, \" : ''}${formData.FacebookCheckBox ? \"Facebook, \" : ''}${formData.TweeterCheckBox ? \"Tweeter, \" : ''}${formData['Surface MailCheckBox'] ? \"Surface Mail, \" : ''}${formData['Personal VisitCheckBox'] ? \"Personal Visit, \" : ''}`\r\n            } readOnly /></div>\r\n\r\n                      <div  className = \"budgetField\"> Your monthly budget for services: <Form.Control className = \"mb-3\" type=\"text\" value={budgetMap[formData.monthlyBudget]} readOnly /></div>\r\n\r\n                       \r\n                      <div ref={middlepage} className = \"singleNameField\"> Your email: <Form.Control className = \"mb-3\" type=\"text\" value={formData.email} readOnly /></div>\r\n\r\n\r\n                      </div>\r\n}\r\n\r\n                </div>\r\n      \r\n  );\r\n}\r\n\r\nexport default SurveyForm\r\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport SurveyForm from './Components/Form'\n\n\nimport React from \"react\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n            <SurveyForm/>\n\n      <Router>\n\n        {/* <Switch>\n          <Route path=\"/\">\n          </Route>\n        </Switch> */}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}